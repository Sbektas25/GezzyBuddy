// Mocks generated by Mockito 5.4.6 from annotations
// in gezzy_buddy/test/providers/plan_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:geocoding/geocoding.dart' as _i7;
import 'package:geolocator/geolocator.dart' as _i2;
import 'package:gezzy_buddy/models/itinerary.dart' as _i9;
import 'package:gezzy_buddy/services/location_service.dart' as _i4;
import 'package:gezzy_buddy/services/map_service.dart' as _i8;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePosition_0 extends _i1.SmartFake implements _i2.Position {
  _FakePosition_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLatLngBounds_1 extends _i1.SmartFake implements _i3.LatLngBounds {
  _FakeLatLngBounds_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationService extends _i1.Mock implements _i4.LocationService {
  MockLocationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> checkLocationPermission() => (super.noSuchMethod(
        Invocation.method(
          #checkLocationPermission,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.Position> getCurrentLocation() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentLocation,
          [],
        ),
        returnValue: _i5.Future<_i2.Position>.value(_FakePosition_0(
          this,
          Invocation.method(
            #getCurrentLocation,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Position>);

  @override
  _i5.Future<String> getAddressFromCoordinates(
    double? latitude,
    double? longitude,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAddressFromCoordinates,
          [
            latitude,
            longitude,
          ],
        ),
        returnValue: _i5.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #getAddressFromCoordinates,
            [
              latitude,
              longitude,
            ],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<List<_i7.Location>> getCoordinatesFromAddress(String? address) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCoordinatesFromAddress,
          [address],
        ),
        returnValue: _i5.Future<List<_i7.Location>>.value(<_i7.Location>[]),
      ) as _i5.Future<List<_i7.Location>>);

  @override
  double calculateDistance(
    double? startLatitude,
    double? startLongitude,
    double? endLatitude,
    double? endLongitude,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculateDistance,
          [
            startLatitude,
            startLongitude,
            endLatitude,
            endLongitude,
          ],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  String getFormattedDistance(
    double? startLatitude,
    double? startLongitude,
    double? endLatitude,
    double? endLongitude,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFormattedDistance,
          [
            startLatitude,
            startLongitude,
            endLatitude,
            endLongitude,
          ],
        ),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.method(
            #getFormattedDistance,
            [
              startLatitude,
              startLongitude,
              endLatitude,
              endLongitude,
            ],
          ),
        ),
      ) as String);

  @override
  _i5.Future<Map<String, String>> getLocationInfo() => (super.noSuchMethod(
        Invocation.method(
          #getLocationInfo,
          [],
        ),
        returnValue: _i5.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i5.Future<Map<String, String>>);
}

/// A class which mocks [MapService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapService extends _i1.Mock implements _i8.MapService {
  MockMapService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<Map<String, dynamic>> getRouteInfo(
          Map<String, String>? locationInfo) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRouteInfo,
          [locationInfo],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<_i3.LatLng?> geocodeAddress(String? address) =>
      (super.noSuchMethod(
        Invocation.method(
          #geocodeAddress,
          [address],
        ),
        returnValue: _i5.Future<_i3.LatLng?>.value(),
      ) as _i5.Future<_i3.LatLng?>);

  @override
  _i5.Future<Map<String, dynamic>> getRoute(
    _i3.LatLng? origin,
    _i3.LatLng? destination,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRoute,
          [
            origin,
            destination,
          ],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<List<_i3.Marker>> getMarkers(_i9.Itinerary? itinerary) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMarkers,
          [itinerary],
        ),
        returnValue: _i5.Future<List<_i3.Marker>>.value(<_i3.Marker>[]),
      ) as _i5.Future<List<_i3.Marker>>);

  @override
  _i5.Future<List<_i3.Polyline>> getRoutes(_i9.Itinerary? itinerary) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRoutes,
          [itinerary],
        ),
        returnValue: _i5.Future<List<_i3.Polyline>>.value(<_i3.Polyline>[]),
      ) as _i5.Future<List<_i3.Polyline>>);

  @override
  Set<_i3.Marker> getMarkersForItinerary(_i9.Itinerary? itinerary) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMarkersForItinerary,
          [itinerary],
        ),
        returnValue: <_i3.Marker>{},
      ) as Set<_i3.Marker>);

  @override
  Set<_i3.Polyline> getRoutesForItinerary(_i9.Itinerary? itinerary) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRoutesForItinerary,
          [itinerary],
        ),
        returnValue: <_i3.Polyline>{},
      ) as Set<_i3.Polyline>);

  @override
  _i3.LatLngBounds getBoundsForItinerary(_i9.Itinerary? itinerary) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBoundsForItinerary,
          [itinerary],
        ),
        returnValue: _FakeLatLngBounds_1(
          this,
          Invocation.method(
            #getBoundsForItinerary,
            [itinerary],
          ),
        ),
      ) as _i3.LatLngBounds);

  @override
  _i5.Future<Map<String, dynamic>> getDirections(
    double? startLat,
    double? startLng,
    double? endLat,
    double? endLng,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDirections,
          [
            startLat,
            startLng,
            endLat,
            endLng,
          ],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<List<_i3.LatLng>> getPolylinePoints(
    double? startLat,
    double? startLng,
    double? endLat,
    double? endLng,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPolylinePoints,
          [
            startLat,
            startLng,
            endLat,
            endLng,
          ],
        ),
        returnValue: _i5.Future<List<_i3.LatLng>>.value(<_i3.LatLng>[]),
      ) as _i5.Future<List<_i3.LatLng>>);

  @override
  _i5.Future<List<_i3.LatLng>> getRouteForDay(
    _i9.Itinerary? itinerary,
    int? dayIndex,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRouteForDay,
          [
            itinerary,
            dayIndex,
          ],
        ),
        returnValue: _i5.Future<List<_i3.LatLng>>.value(<_i3.LatLng>[]),
      ) as _i5.Future<List<_i3.LatLng>>);

  @override
  _i5.Future<Map<String, List<_i3.LatLng>>> getAllRoutes(
          _i9.Itinerary? itinerary) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllRoutes,
          [itinerary],
        ),
        returnValue: _i5.Future<Map<String, List<_i3.LatLng>>>.value(
            <String, List<_i3.LatLng>>{}),
      ) as _i5.Future<Map<String, List<_i3.LatLng>>>);

  @override
  List<_i3.LatLng> getAllLocations(_i9.Itinerary? itinerary) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllLocations,
          [itinerary],
        ),
        returnValue: <_i3.LatLng>[],
      ) as List<_i3.LatLng>);

  @override
  _i5.Future<List<_i3.LatLng>> getRouteBetweenPoints(
    _i3.LatLng? start,
    _i3.LatLng? end,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRouteBetweenPoints,
          [
            start,
            end,
          ],
        ),
        returnValue: _i5.Future<List<_i3.LatLng>>.value(<_i3.LatLng>[]),
      ) as _i5.Future<List<_i3.LatLng>>);

  @override
  List<List<double>> decodePolyline(String? encoded) => (super.noSuchMethod(
        Invocation.method(
          #decodePolyline,
          [encoded],
        ),
        returnValue: <List<double>>[],
      ) as List<List<double>>);
}
